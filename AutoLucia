local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Cache everything
local DepositCoins = ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("DepositCoins")
local BlocksFolder = workspace:WaitForChild("Map"):WaitForChild("Worlds"):WaitForChild("tr_Range"):WaitForChild("Blocks")

local timer = 0
local currentPinata = BlocksFolder:FindFirstChild("pinata")

-- Set up event listener for new pinatas
local function onChildAdded(child)
    if child.Name == "pinata" then
        currentPinata = child
    end
end

BlocksFolder.ChildAdded:Connect(onChildAdded)

-- Handle pinata removal
local function onChildRemoved(child)
    if child == currentPinata then
        currentPinata = nil
    end
end

BlocksFolder.ChildRemoved:Connect(onChildRemoved)

-- Main loop - now only does the InvokeServer call
RunService.Heartbeat:Connect(function(deltaTime)
    timer = timer + deltaTime
    if timer >= 0.25 then
        timer = 0
        
        if currentPinata then
            local args = {currentPinata}
            pcall(function()
                DepositCoins:InvokeServer(unpack(args))
            end)
        end
    end
end)
